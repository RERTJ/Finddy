CREATE DATABASE IF NOT EXISTS 'CSCI3100-Finddy' DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;
USE 'CSCI3100-Finddy';

CREATE TABLE USERS (
  UID int(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  USERNAME varchar(12) NOT NULL,
  EMAIL varchar(50) NOT NULL,
  PASSWORD varchar(512) NOT NULL,
  PHONE_NO int(20) NOT NULL,
  DESCRIPTION varchar(300) NOT NULL,
  LAST_MOD_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE USERRELATIONSHIP (
  RECORDID int(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  HOSTID int(10) NOT NULL,
  USERID int(10) NOT NULL,
  RELATIONSHIP varchar(1) NOT NULL,
  CREATE_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (HOSTID) REFERENCES USERS(UID),
  FOREIGN KEY (USERID) REFERENCES USERS(UID)
)

CREATE TABLE ACTIVITIES (
  AID int(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  TYPE varchar(1) NOT NULL,
  DESCRIPTION varchar(300) NOT NULL,
  LOCATION varchar(100),
  START_TIME timestamp,
  QUOTA int(3),
  NO_OF_JOINERS int(3) DEFAULT 0,
  RATING float(5,4),
  STATUS varchar(1),
  EXPIRE_TIME timestamp NOT NULL,
  CREATOR_ID int(10) NOT NULL,
  CREATE_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (CREATOR_ID) REFERENCES USERS(UID)
)

CREATE TABLE COMMENTS (
  CID int(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  ACTIVITY_ID int(10) NOT NULL,
  CONTENT varchar(300) NOT NULL,
  CREATOR_ID int(10) NOT NULL,
  CREATOR_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITIES(AID),
  FOREIGN KEY (CREATOR_ID) REFERENCES USERS(UID)
)

CREATE TABLE JOINERS (
  RECORDID int(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  ACTIVITY_ID int(10) NOT NULL,
  JOINER_ID int(10) NOT NULL,
  RATING int(1),
  CREATE_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITIES(AID),
  FOREIGN KEY (JOINER_ID) REFERENCES USERS(UID)
)

CREATE TABLE UPDATES (
  UPDATEID int(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  CONTENT varchar(300) NOT NULL,
  USER_ID int(10) NOT NULL,
  READSTATUS varchar(1),
  FOREIGN KEY (USER_ID) REFERENCES USERS(UID)
)


//========SQL================
//CREATE USER
INSERT INTO USERS (USERNAME, EMAIL, PASSWORD, PHONE_NO, DESCRIPTION)
VALUES (?, ?, ?, ?, ?)

//UPDATE USER PROFILE
UPDATE USERS SET EMAIL = ?, PHONE_NO = ?, DESCRIPTION = ?, LAST_MOD_TIME = CURRENT_TIMESTAMP
WHERE UID = ?

//UPDATE USER PASSWORD
UPDATE USERS SET PASSWORD = ? WHERE UID = ?

//ADD USER TO WHITE LIST
INSERT INTO USERRELATIONSHIP (HOSTID, USERID, RELATIONSHIP)
VALUES (?, ?, 'W')

//ADD USER TO BLACK LIST
INSERT INTO USERRELATIONSHIP (HOSTID, USERID, RELATIONSHIP)
VALUES (?, ?, 'B')

//CREATE AN ACTIVITY
INSERT INTO ACTIVITIES (TYPE, DESCRIPTION, LOCATION, START_TIME, QUOTA, EXPIRE_TIME, CREATOR_ID)
VALUES (?, ?, ?, ?, ?, ?, ?)

//JOIN AN ACTIVITY
INSERT INTO JOINERS (ACTIVITY_ID, JOINER_ID)
VALUES (?, ?)

UPDATE ACTIVITIES SET NO_OF_JOINERS = NO_OF_JOINERS + 1 WHERE AID = ?

//POST A COMMENT
INSERT INTO COMMENT (ACTIVITY_ID, CONTENT, CREATOR_ID)
VALUES (?, ?, ?)

//RATE AN ACTIVITY
UPDATE JOINERS SET RATING = ? WHERE ACTIVITY_ID = ?, JOINER_ID = ?

UPDATE ACTIVITY SET RATING = (RATING + ?) / (SELECT COUNT(JOINER_ID) FROM JOINERS WHERE ACTIVITY_ID = ? AND RATING IS NOT NULL )
WHERE AID = ?


//GET ACTIVITY LIST
SELECT (AID, TYPE, DESCRIPTION, LOCATION, START_TIME, QUOTA, NO_OF_JOINERS, STATUS, EXPIRE_TIME, CREATOR_ID, CREATE_TIME)
FROM ACTIVITIES
WHERE TYPE = ? AND STATUS <> 'F' AND NO_OF_JOINERS < QUOTA AND EXPIRE_TIME < CURRENT_TIMESTAMP
ORDER BY START_TIME

//GET COMMENT LIST
SELECT (CID, ACTIVITY_ID, CONTENT, CREATOR_ID, CREATOR_TIME)
FROM COMMENTS
WHERE ACTIVITY_ID = ?

//GET USER PASSWORD
SELECT PASSWORD FROM USERS WHERE EMAIL = ?

//GET BLACK LIST
SELECT USERNAME FROM USERS WHERE USERS.UID IN (SELECT USERID FROM USERRELATIONSHIP WHERE HOSTID = ? AND RELATIONSHIP = 'B')

//GET WHITE LIST
SELECT USERNAME FROM USERS WHERE USERS.UID IN (SELECT USERID FROM USERRELATIONSHIP WHERE HOSTID = ? AND RELATIONSHIP = 'W')
